{"version":3,"sources":["../src/index.js"],"names":["data","setup","console","log","runTests","Promise","mocha","Mocha","timeout","retries","fs","readdir","path","join","__dirname","err","files","error","i","forEach","addFile","f","run","failures","res","catch","then"],"mappings":"aAAA,0D;AACA,wB;AACA,4B;AACA,uD;AACA,qD;AACA,gC;AACA,8C;;AAEA,IAAMA,OAAO,6BAAb;;AAEA,IAAMC,QAAQ,eAARA,KAAQ,GAAY;AACtB,uBAAID,IAAJ;AACAE,YAAQC,GAAR,CAAY,mBAAZ;AACA,UAAM,6BAAcH,IAAd,EAAoB,KAApB,CAAN;AACAE,YAAQC,GAAR,CAAY,kBAAZ;AACA,UAAM,4BAAaH,IAAb,EAAmB,GAAnB,CAAN;AACAE,YAAQC,GAAR,CAAY,gBAAZ;AACH,CAPD;AAQA,IAAMC,WAAW,SAAXA,QAAW,WAAM,IAAIC,OAAJ,CAAY,eAAO;AACtC,YAAMC,QAAQ,IAAIC,4BAAJ,CAAU;AACpBC,qBAAS,CADW;AAEpBC,qBAAS,CAFW,CAET;AAFS,SAAV,CAAd;AAIAC,qBAAGC,OAAH,CAAWC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAX,EAA0C,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtD,gBAAID,GAAJ,EAAS;AACL,uBAAOb,QAAQe,KAAR,CAAcF,GAAd,CAAP;AACH;;AAED;AACA,iBAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAI,GAApB,EAAyBA,GAAzB,EAA8B;AAC1BF,sBAAMG,OAAN,CAAc,qBAAKb,MAAMc,OAAN,CAAcR,eAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,EAA8BO,CAA9B,CAAd,CAAL,EAAd;AACH;AACDnB,oBAAQC,GAAR,CAAYG,MAAMU,KAAlB;;AAEAV,kBAAMgB,GAAN,CAAU,oBAAY;AAClBpB,wBAAQC,GAAR,eAAwBoB,QAAxB;AACAC;AACH,aAHD;;AAKH,SAhBD;AAiBH,KAtBsB,CAAN,EAAjB;AAuBAvB,QAAQwB,KAAR,CAAcvB,QAAQe,KAAtB,EAA6BS,IAA7B,CAAkCtB,QAAlC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["import Mocha from 'mocha-parallel-tests';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport syncEmulators from './client/syncEmulators';\r\nimport syncRequests from './client/syncRequests';\r\nimport hub from './ipc/hub';\r\nimport emulatorData from './emulatorData';\r\n\r\nconst data = emulatorData();\r\n\r\nconst setup = async () => {\r\n    hub(data);\r\n    console.log('Syncing emulators');\r\n    await syncEmulators(data, 10000);\r\n    console.log('Syncing requests');\r\n    await syncRequests(data, 250);\r\n    console.log('Setup complete');\r\n};\r\nconst runTests = () => new Promise(res => {\r\n    const mocha = new Mocha({\r\n        timeout: 0,\r\n        retries: 3 // selenium can be a bit unreliable\r\n    });\r\n    fs.readdir(path.join(__dirname, 'tests'), (err, files) => {\r\n        if (err) {\r\n            return console.error(err);\r\n        }\r\n\r\n        //TODO: Remove!!\r\n        for (let i = 0; i < 100; i++) {\r\n            files.forEach(f => mocha.addFile(path.join(__dirname, 'tests', f)));\r\n        }\r\n        console.log(mocha.files);\r\n\r\n        mocha.run(failures => {\r\n            console.log(`Finished ${failures} failures`);\r\n            res();\r\n        });\r\n        \r\n    });\r\n});\r\nsetup().catch(console.error).then(runTests);\r\n\r\n// let lastOutput;\r\n// setInterval(() => {\r\n//     const output = JSON.stringify(data);\r\n//     if (lastOutput !== output) {\r\n//         console.log(data.emulators);\r\n//     }\r\n//     lastOutput = output;\r\n// }, 1000);"]}