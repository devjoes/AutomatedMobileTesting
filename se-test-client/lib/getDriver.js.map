{"version":3,"sources":["../src/getDriver.js"],"names":["driver","config","seleniumUrl","clientId","Math","round","random","client","getEmulator","udid","host","caps","Object","assign","capabilities","browserVersion","console","log","init","_quit","quit","releaseEmulator"],"mappings":"2EAAA;;;AAGA,kC;AACA,sC;;AAEe,kBAAY;AACvB,QAAMA,SAAS,4BAAmBC,iBAAOC,WAAP,GAAqB,SAAxC,CAAf;AACAF,WAAOG,QAAP,GAAkBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,MAA3B,CAAlB;AACA,QAAMC,SAAS,MAAM,sBAAUP,OAAOG,QAAjB,CAArB,CAHuB;;;;AAOnB,UAAMI,OAAOC,WAAP,EAPa,CAKnBC,IALmB,QAKnBA,IALmB,CAMnBC,IANmB,QAMnBA,IANmB;AAQvB,QAAMC,OAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBZ,iBAAOa,YAAzB,EAAuC;AAChDC,wBAAgBL,IADgC;AAEhDD;AACA;AAHgD,KAAvC,CAAb;AAKAO,YAAQC,GAAR,CAAY,gBAAZ,EAA8BN,IAA9B;AACA,UAAMX,OAAOkB,IAAP,CAAYP,IAAZ,CAAN;AACAK,YAAQC,GAAR,CAAY,YAAZ;AACAjB,WAAOO,MAAP,GAAgBA,MAAhB;AACAP,WAAOS,IAAP,GAAcA,IAAd;AACAT,WAAOmB,KAAP,GAAenB,OAAOoB,IAAtB;AACApB,WAAOoB,IAAP,GAAc,YAAW;AACrB,aAAKD,KAAL;AACA,aAAKZ,MAAL,CAAYc,eAAZ,CAA4B,KAAKZ,IAAjC;AACH,KAHD;AAIA,WAAOT,MAAP;AACH,C","file":"getDriver.js","sourcesContent":["import {\r\n    promiseChainRemote\r\n} from 'wd';\r\nimport config from './config';\r\nimport ipcClient from './ipc/client';\r\n\r\nexport default async () => {\r\n    const driver = promiseChainRemote(config.seleniumUrl + '/wd/hub');\r\n    driver.clientId = Math.round(Math.random() * 100000);\r\n    const client = await ipcClient(driver.clientId);\r\n    const {\r\n        udid,\r\n        host\r\n    } = await client.getEmulator();\r\n    const caps = Object.assign({}, config.capabilities, {\r\n        browserVersion: host,\r\n        udid,\r\n        //deviceName: udid\r\n    });\r\n    console.log('Getting driver', caps);\r\n    await driver.init(caps);\r\n    console.log('Got driver');\r\n    driver.client = client;\r\n    driver.udid = udid;\r\n    driver._quit = driver.quit;\r\n    driver.quit = function() {\r\n        this._quit();\r\n        this.client.releaseEmulator(this.udid);\r\n    };\r\n    return driver;\r\n}"]}